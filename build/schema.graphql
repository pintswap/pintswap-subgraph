# Token details
type Token @entity {
  id: ID!
  #token name
  name: String!
  #token symbol
  symbol: String!
  #decimals used
  decimals: BigDecimal!
}

# account details
type Account @entity {
  #account address
  id: ID!
  #balances
  balances: [TokenBalance!]! @derivedFrom(field: "account")
}
# token balance details
type TokenBalance @entity {
  id: ID!
  #token
  token: Token!
  #account
  account: Account!
  #amount
  amount: BigDecimal!
}

type Offer @entity {
  id: ID!
  token: String
  amount: String
}

type ParseTradeResult @entity {
  id: ID!
  success: Boolean
  gets: Offer
  gives: Offer
  maker: String
  taker: String
  chainId: Int
}

type PintswapTransfer @entity {
  id: ID!
  # token
  token: Token!
  # from account
  fromAccount: Account!
  # to account
  toAccount: Account!
  # pintswap trade
  isPintswapTrade: Boolean
}